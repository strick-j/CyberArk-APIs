meta {
  name: Check a Discovered Accounts existence
  type: http
  seq: 8
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/api/discovered-accounts/check-existence
  body: json
  auth: none
}

body:json {
  {
    "accounts":
    [
      {  
          "type": "unix",
          "subType": "loosely",
          "identifiers": {
              "address": "lintgt01.pineappledev.local",
              "username": "root"
          }
      }
    ]
  }
}

vars:pre-request {
  discoveredAccount-id: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Set discoveredAccount-Id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('discoveredAccount-id', bru.getVar('pasDiscoveredAccountId'));
    tools.log('Discovered Account Id: ' + bru.getVar('discoveredAccount-id'))
  }
}

docs {
  ## Check a discovered accounts existence
  This method checks if accounts with the provided identifiers exist in the system. It is limited to 1000 accounts.
  
  **Considerations for running this REST API**
  | Consideration | Description |
  | --- | :-- |
  | Supported Accounts | Discovery rule sets currently apply only to the following accounts that are discovered by the EPM scanning of endpoints, including loosely connected devices: Windows loosely connected devices, Mac loosely connected devices, Linux loosely connected devices |
  | Required Permissions | To run this API, the user must be assigned to one of the following roles: Privilege Cloud Administrator, Privilege Cloud Basic Administrator, Privilege Cloud Lite Administrator |
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/api/discovered-accounts/{discoveredAccount-id}/activities
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  
  #### Request Path Parameters
  | Parameter | Type | Required | Description
  | :-- | :-- | :-- | :-- | 
  | discoveredAccount-Id | string | yes | The unique identifier of the discovered account. |
  
  #### Request Query Parameters
  None
  
  #### Example Request Body
  None
  
  ### Response
  #### Example Response - Account Exists
  ```
  {
    "accounts": [
      {
        "type": "unix",
        "subType": "loosely",
        "identifiers": {
          "address": "lintgt01.pineappledev.local",
          "username": "root"
        },
        "externalId": null,
        "id": "ad08c211-d385-490c-b745-3dcd33902065",
        "result": "EXISTING_DISCOVERED_ACCOUNT",
        "errorMessage": null
      }
    ]
  }
  ```
  #### Example Response - Unkown Account
  ```
  {
    "accounts": [
      {
        "type": "windows",
        "subType": "loosely",
        "identifiers": {
          "address": "win-computer.cyber-ark.com",
          "username": "admin"
        },
        "externalId": "user_account_5924",
        "id": null,
        "result": "UNKNOWN_ACCOUNT",
        "errorMessage": null
      }
    ]
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
