meta {
  name: Get All Bulk Account Uploads for User
  type: http
  seq: 2
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/bulkactions/accounts/
  body: none
  auth: none
}

query {
  ~filter: 
  ~limit: 1000
}

assert {
  res.status: eq 200
  res.body: isJson
  res.body.Total: isNumber
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
   if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Get bulk account uploads for User
  This method gets the status of all bulk account uploads that the user performed.
  
  > **Note**
  >   - Bulk account uploads are returned sorted by their creation time in descending order - from the most recent to the oldest.
  >   - The bulk account uploads that are returned are ones that a specific user created and has authorization to view.
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/bulkactions/accounts
  
  > **Note**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request Query Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | filter | string | no | Filters according to REST standards. You can use the following filter: **status** - returns all bulk account uploads that meet the required status|
  | limit | integer | no | Limits according to REST Standards. You can use the following limit: Number of accounts to return, starting from the first account |
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  { 
    "Total": "4",	
    "BulkActions": [
     {
       "id": 4,
       "source": "sample.csv",
       "creationTime": 591093165,
       "status": "failed",
       "result": { "error": "server connection failed" }
     },
     {
       "id": 3,
       "source": "sample3.csv",
       "creationTime": 1591093161,
       "status": "inProgress"
     },
     {
       "id": 2,
       "source": "sample2.csv",
       "creationTime": 1591093074,
       "status": "completedSuccessfully",
       "result": {
          "succeeded": 3,
          "failed": 0
       }
     },
     {
       "id": 1,
       "source": sample.csv,
       "creationTime": 1591092699,
       "status": "completedWithErrors",
       "result": {
          "succeeded": 2,
          "failed": 1
       }
     },
   ]
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
