meta {
  name: Get Bulk Account Upload Result
  type: http
  seq: 3
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/bulkactions/accounts/{{bulkId}}
  body: none
  auth: none
}

vars:pre-request {
  bulkId: 
}

assert {
  res.status: eq 200
  res.body: isJson
  res.body.Id: isNumber
  res.body.Status: isString
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
   if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Get bulk account upload result
  This method returns the result of the bulk account upload, which is identified by the ID of the bulk account upload. When the upload has finished, the API returns the result. The result contains a list of all the accounts that succeeded or failed to upload.
  
  > **Note**
  >    - Only the user that created the bulk account upload can receive the result of the upload using this API.
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/bulkactions/accounts/{bulkId}
  
  > **Note**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request Query Parameters
  None
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  {
    "Source": "sample.csv",
    "CreationTime": 1591092699,
    "Status": "completedWithErrors",
    "Result": { "succeeded": 2, "failed": 1},
    "SucceededItems": { 
      "Total": 2,
      "Items": [
        {
          "uploadIndex": 1, 
          "Id": 24_2, 
          "userName": "Root", 
          "address": "92.168.11.99", 
          "safeName": "UnixAdminPasswords", 
          "platformeId": "UnixTelnet", 
          "automaticManagementEnabled": true, 
          "groupName": "UnixAdmins", 
        },
       {
         "uploadIndex": 2,
          "Id": 24_3,
          "userName": "Administrator",
          "address": "JSmith.exFinance.com",
          "safeName": "WindowsPasswords",
          "platformeId": "WinDesktopLocal",
          "automaticManagementEnabled": true,
          "logonDomain": 192.168.50.31,
        }
      ]
     }
    "FailedItems": {
      "Total": 1,
      "Items": [
        {
          "uploadIndex": 3,
          "userName" "OracleAdmin",
          "address": "192.168.53.12",
          "safeName": "OracleAdminPasswords",
          "platformeId": "Oracle",
          "automaticManagementEnabled": false,
          "manualManagementReason": "Oracle Admin - Break Glass user error: You are not authorized to create object in safe OracleAdminPasswords" 
        }
      ]
   }
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
