meta {
  name: Get Accounts
  type: http
  seq: 1
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/accounts
  body: none
  auth: none
}

query {
  ~filter: safeName eq {{safeName}}
  ~search: 
  ~searchType: contains
  ~sort: UserName
  ~offset: 0
  ~limit: 1000
}

vars:pre-request {
  safeName: BRU-API-TEST-SAFE
}

assert {
  res.status: eq 200
  res.body: isJson
  res.body.count: isNumber
}

script:pre-request {
  // Perform authentication usings platformToken.js tools
  const platformTokenAuth = require('./tools/platformTokenAuth');
  await platformTokenAuth.login();
}

docs {
  ## Get accounts
  This method returns a list of all the accounts in Privilege Cloud.
  
  > **Note**
  > - The number of returned accounts is determined by the MaxDisplayedRecords parameter in the Privilege Cloud Portal configuration.
  
  The user who runs this web service requires List Accounts permissions in the Safe.
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/accounts
  
  
  > **Note**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request Query Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | search | string | no | A list of keywords to search for in accounts, separated by a space. |
  | searchType | string | no | Get accounts that either contain or start with the value specified in the Search parameter. |
  | filter| string | no | Search for accounts using a filter. See Filter parameters. To use more than one filter, use the AND operator. |
  | sort | string | no | The property or properties that you want to sort returned accounts, followed by asc (default) or desc to control sort direction. Separate multiple properties with commas, up to a maximum of three properties. |
  | extendedDetails | boolean | no | Returns additional user details as user groups and userDN for LDAP users.|
  | offset | integer | no | Offset of the first account that is returned in the collection of results. |
  | limit | integer | no | The maximum number of returned accounts. The maximum number that you can specify is 1000. When used together with the Offset parameter, this value determines the number of accounts to return, starting from the first account that is returned. |
  | savedFilter | string | no | Search for accounts using a saved filter(s). Search using any of the following saved filter types: Regular, Recently, New, Link, Deleted, PolicyFailures, AccessedByUsers, ModifiedByUsers, ModifiedByCPM, DisabledPasswordByUser, DisabledPasswordByCPM, ScheduledForChange, ScheduledForVerify, ScheduledForReconcile, SuccessfullyReconciled, FailedChange, FailedVerify, FailedReconcile, LockedOrNew, Locked, Favorites |
  
  #### Filter Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | safeName| string | no | Get accounts from a specific Safe, using the Safe name. |
  | modificationTime | string | no | Get accounts that were modified after a given time. |
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  {
    "value": [
      {
        "categoryModificationTime": 1668718537,
        "platformId": "",
        "safeName": "CONNECTOR_Accounts",
        "LinkedAccounts": [],
        "id": "59_3",
        "name": "PluginManagerUser",
        "address": "192.168.10.15",
        "userName": "PluginManagerUser",
        "secretType": "password",
        "platformAccountProperties": {},
        "secretManagement": {
          "automaticManagementEnabled": true,
          "lastModifiedTime": 1679421982
        },
        "createdTime": 1668718536
      },
      {
        "categoryModificationTime": 1699988871,
        "platformId": "",
        "safeName": "CONNECTOR1_Accounts",
        "LinkedAccounts": [],
        "id": "159_3",
        "name": "PluginManagerUser",
        "address": "192.168.10.15",
        "userName": "PluginManagerUser",
        "secretType": "password",
        "platformAccountProperties": {},
        "secretManagement": {
          "automaticManagementEnabled": true,
          "lastModifiedTime": 1727889422
        },
        "createdTime": 1699988870
      }
    ],
    "count": 2,
    "nextLink": ""
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
