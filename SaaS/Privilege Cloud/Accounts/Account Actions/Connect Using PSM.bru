meta {
  name: Connect Using PSM
  type: http
  seq: 10
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/accounts/{{accountId}}/PSMConnect/
  body: json
  auth: none
}

headers {
  Content-Type: application/json
}

body:json {
  {
    "reason": "Bruno API Example",
    "TicketingSystemName": null,
    "TicketId": null,
    "ConnectionComponent": "PSM-RDP",
    "ConnectionParams": {
      "Address": {
        "value":"example.bruno.com",
        "ShouldSave": false
      }
    }
  }
}

vars:pre-request {
  accountId: 100_1
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets Account ID for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('accountId', bru.getEnvVar('testPrivilegeCloudMgmtId'));
    tools.log('Account Id: ' + bru.getVar('accountId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  if (res.status != 200) {
    tools.log('Error Code: ' + res.body.ErrorCode);
    tools.log('Error Message: ' + res.body.ErrorMessage);
  }
}

docs {
  ## Connect using PSM
  This method enables you to connect to an account through PSM (PSMConnect) using a connection method defined in the Privilege Cloud Portal.
  
  A response header defines which connection method is returned.
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/Accounts/{accountId}/PSMConnect/
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & 
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | POST | application/json |
  
  #### Request Query Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | accountId | string | yes | The unique ID of the account.|
  
  ### Example Request Body
  ```
  {
    "reason":"<Reason>",
    "TicketingSystemName":"<Ticketing system>",
    "TicketId":"<Ticketid>",
    "ConnectionComponent":"<Connection component id>",
    "ConnectionParams": {
      "<Connection parameter name>": {
        "value":"<Connection parameter value>",
        "ShouldSave":<true\false>
      },
      "<Connection parameter name>": {
        "value":"<Connection parameter value>",
        "ShouldSave":<true\false>
      }
    }
  }
  ```
  
  #### Example Response (200 OK)
  ```
  {
    "full address": "example.example.local",
    "server port": "3389",
    "username": "localhost\\PSM@68f1243429-1234-1234-1234-1ea21234246b",
    "alternate shell": "PSM@68f1243429-1234-1234-1234-1ea21234246b",
    "desktopwidth": "1024",
    "desktopheight": "768",
    "screen mode id": "1",
    "redirectdrives": "1",
    "drivestoredirect": "*",
    "redirectsmartcards": "0",
    "EnableCredSspSupport": "0",
    "redirectcomports": "0",
    "remoteapplicationmode": "1",
    "remoteapplicationprogram": "||PSMInitSession",
    "remoteapplicationname": "PSM-RDP",
    "disableconnectionsharing": "1",
    "use multimon": "0",
    "span monitors": "0",
    "authentication level": "2"
  }
  ```
  
  #### Example Response (400 Bad Request)
  ```
  {
    "ErrorCode": "EPVWF061E",
    "ErrorMessage": "The password typed does not adhere to current password policy rules, please review the password policy rules"
  }
  ```
  
  #### Example Response (404 Not Found)
  ```
  {
    "ErrorCode": "PASWS039E",
    "ErrorMessage": "Account [212_9] was not found."
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
  
  
  
  
}
