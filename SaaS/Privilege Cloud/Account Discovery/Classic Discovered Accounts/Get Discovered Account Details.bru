meta {
  name: Get Discovered Account Details
  type: http
  seq: 2
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/discoveredaccounts/{{pasClassicDiscoveredAccountId}}
  body: none
  auth: none
}

query {
  ~name: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  // Perform authentication usings platformToken.js tools
  const platformTokenAuth = require('./tools/platformTokenAuth');
  await platformTokenAuth.login();
}

docs {
  ## Get discovered account details
  
  > ***IMPORTANT***
  > - The classic Discovery functionality will be deprecated in the near future. We advise that you transition to the new Discovery functionality and configure the corresponding APIs accordingly.
  
  This method returns information about a discovered account and its dependencies from the Pending Accounts list. The discovered account is identified by its ID.
  
  The user who runs this web service must belong to the Vault Admins group.
  
  > **NOTE**
  > - Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method.
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/DiscoveredAccounts/{id}/
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request URL Parameters
  | Parameter | Type | Required | Description
  | :-- | :-- | :-- | :-- | 
  | id | string | yes| The discovered account's unique ID. |
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  {
    "id": "18_5",
    "name": "win8.example.com-administrator-e7626445-404b-4647-9b23-c4f08513a688",
    "userName": "administrator",
    "address": "win8.example.com",
    "accountEnabled": true,
    "osGroups": "Backup Operators,IIS_IUSRS,Network Configuration Operators",
    "platformType": "Windows Server Local",
    "domain": "example.com",
    "lastLogonDateTime": 1530635686,
    "lastPasswordSetDateTime": 1530635786,
    "passwordNeverExpires": false,
    "osVersion": "Windows Server 2012 R2 Standard",
    "privileged": false,
    "userDisplayName": "User Display Name",
    "description": "User Description",
    "passwordExpirationDateTime": 1530645686,
    "osFamily": "Server",
    "organizationalUnit": "CN=Users,DC=example,DC=com",
    "platformTypeAccountProperties": {
      "SID": "S-1-5-21-304654729-3147011263-1431158397-3154"
    },
    "additionalProperties": {
      "Port": 445,
      "UserDN": "CN=administrator,CN=Users,DC=example,DC=com"
    },
    "numberOfDependencies": 2,
    "dependencies": [
      {
        "name": "ServiceDep",
        "address": "win8.example.com",
        "type": "Windows Service"
      },
      {
        "name": "MyScheduledTask",
        "address": "win8.example.com",
        "type": "Windows Scheduled Task",
        "taskFolder": "Tasks"
      }
    ]
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
