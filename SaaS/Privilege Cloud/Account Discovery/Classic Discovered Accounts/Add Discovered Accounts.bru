meta {
  name: Add Discovered Accounts
  type: http
  seq: 3
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/discoveredaccounts
  body: json
  auth: none
}

query {
  ~name: 
}

body:json {
  {
    "userName":"user1",
    "address":"win8.example.com",
    "platformTypeAccountProperties":{"SID":"S-1-5-21-304654729-3147011263-1431158397-3154"},
    "accountEnabled":true,
    "osGroups":"Backup Operators,IIS_IUSRS,Network Configuration Operators",
    "platformType":"Windows Server Local",
    "domain":"example.com",
    "lastLogonDateTime":"1530635686",
    "lastPasswordSetDateTime":"1530635786",
    "passwordNeverExpires":false,
    "osVersion":"Windows Server 2012 R2 Standard",
    "privileged":false,
    "userDisplayName":"User Display Name",
    "description":"User Description",
    "passwordExpirationDateTime":"1530645686",
    "osFamily":"Server",
    "OrganizationalUnit":"CN=Users,DC=example,DC=com",
    "additionalProperties":{"Port":445,"UserDN":"CN=user1,CN=Users,DC=example,DC=com"},
    "Dependencies": [ 
      {
        "name": "ServiceDep",
        "address": "win8.example.com",
        "type": "Windows Service"
      }
    ]
  }
}

script:pre-request {
  // Perform authentication usings platformToken.js tools
  const platformTokenAuth = require('./tools/platformTokenAuth');
  await platformTokenAuth.login();
}

docs {
  ## Add discovered accounts
  
  > ***IMPORTANT***
  > - The classic Discovery functionality will be deprecated in the near future. We advise that you transition to the new Discovery functionality and configure the corresponding APIs accordingly.
  
  This method adds newly discovered accounts and their dependencies.
  
  The user who runs this web service must have the following permissions:
  
  **To add pending accounts:**
  - **User:** Owner of the PasswordManager_Pending Safe
  - **Permissions:**
    - Add account
    - List files
    - Update account properties
  
  **To onboard the account:**
  - **User:** Owner of the target Safe of the onboarding rule
  - **Permissions:**
    - Add account
    - Update account properties
    - Initiate CPM account management operations
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/DiscoveredAccounts/
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | POST | application/json |
  
  #### Request URL Parameters
  None
  
  #### Request Filter Parameters
  None
  
  ### Example Request Body
  #### Windows Account Example
  ```
  {
    "userName":"user1",
    "address":"win8.example.com",
    "platformTypeAccountProperties":{"SID":"S-1-5-21-304654729-3147011263-1431158397-3154"},
    "accountEnabled":true,
    "osGroups":"Backup Operators,IIS_IUSRS,Network Configuration Operators",
    "platformType":"Windows Server Local",
    "domain":"example.com",
    "lastLogonDateTime":"1530635686",
    "lastPasswordSetDateTime":"1530635786",
    "passwordNeverExpires":false,
    "osVersion":"Windows Server 2012 R2 Standard",
    "privileged":false,
    "userDisplayName":"User Display Name",
    "description":"User Description",
    "passwordExpirationDateTime":"1530645686",
    "osFamily":"Server",
    "OrganizationalUnit":"CN=Users,DC=example,DC=com",
    "additionalProperties":{"Port":445,"UserDN":"CN=user1,CN=Users,DC=example,DC=com"},
    "Dependencies": [ 
      {
        "name": "ServiceDep",
        "address": "win8.example.com",
        "type": "Windows Service"
      }
    ]
  }
  ```
  
  #### AWS Account Example
  ```
  {
    "userName":"amazon_accesskey_user",
    "address":"aws.com",
    "discoveryDate":"2018-05-03T13:00:00Z",
    "platformType":"AWS Access Keys",
    "privileged":true,
    "platformTypeAccountProperties":{"awsAccessKeyID":"ASASASASSA","awsAccountID":"123123123123"}
  }
  ```
  
  #### Azure Account Example
  ```
  {
    "userName":string,
    "address":string,
    "discoveryDate":"1530635689",
    "platformType":"Azure Password Management",
    "accountEnabled":true,
    "privileged":true,
    "privilegedCriteria":string,
    "platformTypeAccountProperties":{"activeDirectoryID":string}
  }
  ```
  
  ### Response Parameters
  | Parameter | Type | Description |
  | :-- | :-- | :-- |
  | value | array | A list of pending discovered accounts. |
  | count | integer | The total number of results across all pages. |
  | nextLink | string | An opaque URL to the next page of results. Should be present only when the requested page size (limit) is not specified, and there are more results than a single page, as defined by the server. The last page shouldn't have 'nextLink' in the response. If the limit in the request is too high, an error is returned. |
  
  #### Example Response (Windows Account)
  ```
  {
    id: 19_5,
    status: addedAccount,
    name: user1,
    address: win8.example.com,
    safe: PasswordManager_Pending,
    dependencies:[ 
      {
        id: 19_6,
        status: addedDependency,
        type: Windows Service,
        name: ServiceDep,
        address: win8.example.com,
        failureReason: ""
      }
    ]
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
