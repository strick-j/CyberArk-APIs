meta {
  name: Configure BYOK
  type: http
  seq: 2
}

post {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/api/byok/configure
  body: none
  auth: none
}

docs {
  ## Configure BYOK
  This API configures your KMS key in the Privilege Cloud BYOK service. In response, Privilege Cloud verifies access to your key.
  
  The result indicates if Privilege Cloud successfully accessed your key, and that it can be used for data encryption within Privilege Cloud.
  
  > ***CAUTION***
  > - Before running the Configure BYOK API, ensure that you there is no encryption key change in progress. This means that you have not run the Enable BYOK or Disable BYOK APIs in the last 20 minutes.
  
  > ***IMPORTANT***
  > - Customers that configured BYOK using Gen1 KMS policy (prior to May 2024)
  >   - CyberArk continues to support the Gen1 KMS policy. There is no need to upgrade to Gen2 KMS policy.
  >   - If you decide to upgrade to Gen2 KMS policy, after replacing the KMS policy, wait 10 minutes before performing a BYOK action.
  
  ### Required User Permissions
  To run this API, the user must be assigned to one of the following roles:
  - Privilege Cloud Administrator
  - Privilege Cloud Administrator Basic
  - Privilege Cloud Administrator Lite
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/api/byok/configure
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | POST | application/json |
  
  #### Request Body Parameters
  | Parameter | Type | Description |
  | :-- | :-- | :-- |
  | kms_arn | string | The arn of your KMS as copied from AWS KMS. |
  
  ### Example Request Body
  ```
  {
    "kms_arn": "arn:string"
  }
  ```
  
  #### Example Response
  ```
  {
    "message":"Customer key is verified and set successfully.",
    "status":"BYOK OFF",
    "customer_key_details":{
      "key_arn":"<customer_key_arn>",
      "account":"<customer_account_id>",
      "region":"<customer_key_region>"
    },
    "cyberark_integration_details":{
    "policy":{
      "Sid": "Allows CyberArk to use the customer key for data encryption.",
      "Effect": "Allow",
      "Principal": {
        "AWS": [
          <encrypt_secret_role>,
          <encrypt_pii_role>
        ]
      },
      "Action": [
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:DescribeKey",
        "kms:ReEncrypt*"
      ],
      "Resource": "*"
      },
      {
        "Sid": "Allows CyberArk to use the customer key for data decryption.",
        "Effect": "Allow",
        "Principal": {
          "AWS": [
            <decrypt_secrets_role>,
            <decrypt_pii_role>"
          ]
        },
        "Action": [
          "kms:DescribeKey",
          "kms:Decrypt"
        ],
        "Resource": "*"
      },
      "account":"<customer_account_id>4",
      "region":"<tenant_aws_region>",
      "roles_arn": [
        <encrypt_secret_role>,
        <encrypt_pii_role>,
        <decrypt_secrets_role>,
        <decrypt_pii_role>
      ]
   },
   "last_updated":"2023-06-06T11:10:35.535Z"
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
