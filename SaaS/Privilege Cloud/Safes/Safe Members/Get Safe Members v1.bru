meta {
  name: Get Safe Members v1
  type: http
  seq: 1
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/WebServices/PIMServices.svc/Safes/{{safeName}}/Members
  body: none
  auth: none
}

vars:pre-request {
  safeName: example-safe
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets safeName for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('safeName', bru.getEnvVar('testSafeName'));
    tools.log('Safe Name: ' + bru.getVar('safeName'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Get all Safe members - v1
  ***Recommended Endpoint for Get All Safe Members is v2***
  This method returns a list of the members of a Safe.
  
  The user who runs this web service must have View Safe Members permissions in the Safe.
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/WebServices/PIMServices.svc/Safes/{SafeName}/Members
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & 
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request Query Parameters
  None
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  {
    "members": [
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": true,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": true,
          "ManageSafeMembers": true,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": true,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "example@example.com"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": true,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": true,
          "ManageSafeMembers": true,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": true,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "Master"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": true,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": true,
          "ManageSafeMembers": true,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": true,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "Batch"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": false,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": true,
          "RestrictedRetrieve": false,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": true
        },
        "UserName": "CyberarkAccountsIntegration"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": false,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "CyberarkRotationService"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": true,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": false,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": false
        },
        "UserName": "Backup Users"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "Auditors"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": true,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": true,
          "ListContent": false,
          "ManageSafe": true,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": true,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": true,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": false
        },
        "UserName": "Operators"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": true,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": false,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": false
        },
        "UserName": "DR Users"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "Notification Engines"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "PVWAGWAccounts"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": true,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": false
        },
        "UserName": "PSMAppUsers"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": false,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": false
        },
        "UserName": "CONNECTOR"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": true,
          "BackupSafe": true,
          "Delete": true,
          "DeleteFolder": true,
          "ListContent": true,
          "ManageSafe": true,
          "ManageSafeMembers": true,
          "MoveFilesAndFolders": true,
          "Rename": true,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": true,
          "ViewMembers": true
        },
        "UserName": "example@cyberark.cloud.1234"
      },
      {
        "Permissions": {
          "Add": true,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": true,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": true,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": true,
          "Update": true,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": true
        },
        "UserName": "CyberarkAccessService"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": true,
          "Retrieve": true,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": false,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": true
        },
        "UserName": "SecretsHub"
      },
      {
        "Permissions": {
          "Add": false,
          "AddRenameFolder": false,
          "BackupSafe": false,
          "Delete": false,
          "DeleteFolder": false,
          "ListContent": true,
          "ManageSafe": false,
          "ManageSafeMembers": false,
          "MoveFilesAndFolders": false,
          "Rename": false,
          "RestrictedRetrieve": false,
          "Retrieve": false,
          "Unlock": false,
          "Update": false,
          "UpdateMetadata": true,
          "ValidateSafeContent": false,
          "ViewAudit": false,
          "ViewMembers": false
        },
        "UserName": "CyberarkDiscoveryService"
      }
    ]
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
