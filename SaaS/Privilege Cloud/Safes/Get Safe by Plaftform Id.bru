meta {
  name: Get Safe by Plaftform Id
  type: http
  seq: 3
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/passwordvault/api/platforms/{{platformId}}/safes
  body: none
  auth: none
}

query {
  ~search: 
  ~sort: UserName
  ~offset: 0
  ~limit: 1000
}

vars:pre-request {
  platformId: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets platformId for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('platformId', bru.getEnvVar('testPlatformName'));
    tools.log('Platform Name: ' + bru.getVar('platformId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Get Safes by Platform Id
  This method returns Safes according to the platform ID
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/PasswordVault/API/Platforms/{PlatformID}/Safes/
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & 
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request Path Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | platformId | string | yes | The ID of the platform for which you want to return safes. |
  
  #### Request Query Parameters
  | Parameter | Type | Required | Description |
  | :-- | :-- | :-- | :-- |
  | safeName | string | no | You can search for a safe using a partial string. **Example:** /safes?Safe=<safeName>/ |
  
  
  ### Example Request Body
  None
  
  #### Example Response
  ```
  {
    "value": [
      "BRU-API-TEST-SAFE",
      "BRU-API-TEST-SAFE-ACCESS",
      "CONNECTOR",
      "CONNECTOR_Accounts",
      "Notification Engine",
      "PasswordManager",
      "PasswordManager_Accounts",
      "PasswordManagerShared",
      "PSM",
      "PSMPADBridgeCustom",
      "PSMPADBUserProfile",
      "PSMRecordings",
      "PSMUniversalConnectors",
      "PSMUnmanagedSessionAccounts",
      "PVWAPublicData",
      "PVWATicketingSystem",
      "SharedAuth_Internal",
      "TelemetryConfig",
      "VaultInternal"
    ],
    "count": 18
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
