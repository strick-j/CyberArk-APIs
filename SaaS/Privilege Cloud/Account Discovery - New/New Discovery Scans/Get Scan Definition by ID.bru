meta {
  name: Get Scan Definition by ID
  type: http
  seq: 5
}

get {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/api/scan-definitions/{{scanDefinitionId}}?extendedDetails=false
  body: none
  auth: none
}

query {
  extendedDetails: false
}

vars:pre-request {
  scanDefinitionId: 
}

assert {
  res.status: eq 200
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets Scan Definition Id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('scanDefinitionId', bru.getVar('pasScanDefinitionId'));
    tools.log('Scan Definition Id: ' + bru.getVar('scanDefinitionId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Get scan definition by ID
  This method retrieves details about a specific scan definition, based on its unique ID.
  
  **Considerations for running this REST API**
  | Consideration | Description |
  | --- | :-- |
  | Required Permissions | To run this API, the user must be assigned to one of the following roles: Privilege Cloud Administrator, Privilege Cloud Basic Administrator, Privilege Cloud Lite Administrator |
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/api/scan-definitions?extendedDetails=false
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | GET | application/json |
  
  #### Request URL Parameters
  | Parameter | Type | Required | Description
  | :-- | :-- | :-- | :-- | 
  | scanDefinitionId | string | yes | The unique ID of the scan definition. |
  | filter | string | no | Filter the scan definition list. If the **extendedDetails** parameter is set to **false**, you can sort according to the following properties: type, recurrenceType. If the **extendedDetails** parameter is set to **true**, you can sort according to the above properties and the following additional properties: lastInstancestatus |
  | sort | string | no | Sort the returned list of scan definitions. Add **asc** (default) or **desc** to control sort direction. If the **extendedDetails** parameter is set to **false**, you can sort according to the following properties: creationTime (default), updateTime, name, type, recurrenceType. If the **extendedDetails** parameter is set to **true**, you can sort according to the above properties and the following additional properties: lastInstanceStatus, lastInstanceCreationTime |
  | extendedDetails | string | no | Requests details about the last scan that was run with this scan definition. |
  
  #### Request Query Parameters
  | Parameter | Type | Required | Description
  | :-- | :-- | :-- | :-- | 
  | extendedDetails | string | no | Requests details about the last scan that was run with this scan definition. |
  
  #### Example Request Body
  None
  
  ### Response
  #### Example Response
  ```
  {
    "id": "12ec6ab2-fffc-4683-903d-070ef3337c2b",
    "name": "Dev Demo Scan",
    "type": "windows_domain",
    "properties": {
      "ou": "OU=DemoScan,OU=Windows,OU=Servers,DC=example,DC=local",
      "domain": "pineappledev.local"
    },
    "recurrenceType": "immediate",
    "credentials": [
      {
        "name": "domain admin",
        "type": "account",
        "properties": {
          "account_id": "63_5"
        }
      }
    ],
    "creationTime": "2024-06-03T20:10:53Z",
    "updateTime": "2024-06-03T20:10:53Z",
    "tags": []
  }
  ```
  
  ### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
