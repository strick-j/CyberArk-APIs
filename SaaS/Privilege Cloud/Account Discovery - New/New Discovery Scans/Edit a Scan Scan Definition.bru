meta {
  name: Edit a Scan Scan Definition
  type: http
  seq: 2
}

put {
  url: https://{{identityTenantName}}.privilegecloud.cyberark.cloud/api/scan-definitions/{{scanDefinitionId}}
  body: json
  auth: none
}

body:json {
  {
    "name": "Bru Demo Scan Updated",
    "type": "WIN_NIX_DOMAIN",
    "properties": {
      "ou": "DC=example,DC=local",
      "domain": "example.local"
    },
    "recurrenceType": "recurring",
    "recurrenceData": {
      "repeatPattern": "DAILY",
      "date": "{{startDate}}",
      "daysOfWeek": ["SUNDAY"],
      "times": ["12:30"],
      "timeZone":"America/Chicago"
    },
    "credentials": [
      {
        "name": "domain admin",
        "type": "account",
        "properties": {
          "account_id": "63_5"
        }
      }
    ],
    "tags": []
  }
}

vars:pre-request {
  scanDefinitionId: 
  startDate: 
}

assert {
  res.status: eq 202
  res.body: isJson
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets Scan Definition Id for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    var currentTime = new Date()
    bru.setVar('scanDefinitionId', bru.getVar('pasScanDefinitionId'));
    // Scan will be scheduled to start one year from now.
    bru.setVar('startDate', (currentTime.getFullYear() + 1) + '-' + (currentTime.getMonth() + 1) + '-01')
    tools.log('Scan Definition Id: ' + bru.getVar('scanDefinitionId'))
    tools.log('Current Year: ' + bru.getVar('startDate'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.ErrorCode) {
      tools.log('Error Code: ' + res.body.ErrorCode);
    }
    if (res.body.ErrorMessage) {
      tools.log('Error Message: ' + res.body.ErrorMessage);
    }
    if (res.body.Details) {
      tools.log('Details Error Code: ' + res.body.Details[0].ErrorCode);
      tools.log('Details Error Message: ' + res.body.Details[0].ErrorMessage);
      tools.log('Details Parameter Name: ' + res.body.Details[0].ParameterName);
    }
  }
}

docs {
  ## Edit a Scan definition
  This method updates an existing scan definition to discover accounts in target machines.
  
  > ***IMPORTANT***
  > - You can define up to 500 scan definitions.
  > - The number of servers and server users per scan affect the duration of the scan.
  
  **Considerations for running this REST API**
  | Consideration | Description |
  | --- | :-- |
  | Required Permissions | To run this API, the user must be assigned to one of the following roles: Privilege Cloud Administrator, Privilege Cloud Basic Administrator, Privilege Cloud Lite Administrator |
  
  ### Request URL
  https://<subdomain>.privilegecloud.cyberark.cloud/api/scan-definitions/{scanDefinitionId}
  
  > **URL NOTES**
  > - Make sure there are no spaces in the URL.
  > - The following characters are not supported in URL values: + & %
  > - If the URL includes a dot (.), add a forward slash (/) at the end of the URL. For example: api/Safes/MySafe/Members/user@cyber.com/
  
  #### Request Resource Information
  | HTTP Method | Content Type |
  | :-- | :-- |
  | POST | application/json |
  
  #### Request URL Parameters
  None
  
  #### Request Query Parameters
  None
  
  #### Request Body Parameters
  | Parameter | Type | Required | Description
  | :-- | :-- | :-- | :-- | 
  | name | string | yes |  |
  | type | string | yes |  |
  | properties | key-value list | yes |  |
  | credentials | string or string list (key value dictionary) | yes | |
  | networkId | string | no | |
  | tags | string | no |  |
  | recurrenceType | string | yes | Determines the recurrence policy of the scan. **Valid Values:** Immediate, Scheduled, Recurring |
  
  #### Example Request Body
  ```
  {
    "name": "Bru Demo Scan Updated",
    "type": "WIN_NIX_DOMAIN",
    "properties": {
      "ou": "DC=example,DC=local",
      "domain": "example.local"
    },
    "recurrenceType": "recurring",
    "recurrenceData": {
      "repeatPattern": "DAILY",
      "date": "2024-10-31",
      "daysOfWeek": ["SUNDAY"],
      "times": ["12:30"],
      "timeZone":"America/Chicago"
    },
    "credentials": [
      {
        "name": "domain admin",
        "type": "account",
        "properties": {
          "account_id": "63_5"
        }
      }
    ],
    "tags": []
  }
  ```
  
  ### Response
  #### Example Response (202 Accepted)
  ```
  {
    "id": "e0130277-0537-423d-9c3c-ddf1453b5d4a",
    "name": "Bru Demo Scan Updated",
    "type": "WIN_NIX_DOMAIN",
    "properties": {
      "domain": "example.local",
      "ou": "DC=example,DC=local"
    },
    "recurrenceType": "RECURRING",
    "recurrenceData": {
      "date": "2024-10-31",
      "timeZone": "America/Chicago",
      "times": [
        "12:30"
      ],
      "repeatPattern": "DAILY",
      "daysOfWeek": [
        "SUNDAY"
      ]
    },
    "credentials": [
      {
        "name": "domain admin",
        "type": "account",
        "properties": {
          "account_id": "63_5"
        }
      }
    ],
    "creationTime": "2024-10-30T19:21:08Z",
    "updateTime": "2024-10-30T19:31:11Z",
    "tags": []
  }
  ```
  
  #### Example Response (400 Bad Request)
  ```
  {
    "code": "400",
    "message": "Bad Request",
    "description": "There are errors in the following field(s): 'type'. Make any needed corrections and try again.",
    "errors": [
      {
        "code": "DS_INVALID_VALUE",
        "message": "[windwos_domain] is not a valid scan type.",
        "field": "type"
      }
    ]
  }
  ```
  
  #### Response Codes
  | Return Code | Code Number | Description |
  | --- | --- | :-- |
  | Success | 200 | The request succeeded. The actual response will depend on the request method used. |
  | Created | 201 | The request was fulfilled and resulted in a new resource being created. |
  | Accepted | 202 | The request has been accepted for processing. |
  | No Content | 204 | The server successfully processed the request and is not returning any content (no response body). This code is typically returned by DELETE requests. |
  | Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |
  | Unauthorized | 401 | The request requires user authentication. |
  | Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |
  | Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |
  | Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |
  | Too Many Requests | 429 | The user has sent too many requests in a given amount of time ("rate limiting"). |
  | Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |
  | Not Implemented | 501 | The server does not support this operation due to version incompatibility. |
}
