meta {
  name: Verify Correlation
  type: http
  seq: 9
}

post {
  url: https://{{identityTenantName}}-cloud_onboarding.cyberark.cloud/api/validate-onboarding
  body: json
  auth: none
}

body:json {
  {
    "organizationRootId":"r-zjhf",
    "organizationId":"o-apl4ofpkaq",
    "managementAccountId":"969656756524",
    "services":["dpa"],
    "accountDisplayName":"PIN - AWS - IC - COB",
    "description": "Pineapple AWS via Cloud Onboarding"
  }
}

vars:pre-request {
  awsOrgId: o-aps4ofabcd
  awsAccountId: 1243456756524
  correlationValue: 
  tenantId: 
}

assert {
  res.body: isJson
  res.status: eq 200
}

script:pre-request {
  const platformTokenAuth = require('./tools/platformTokenAuth');
  const tools = require('./tools/tools');
  
  // Perform authentication usings platformToken.js tools
  await platformTokenAuth.login();
  
  // Sets pasSafeMemberName for testing based on environment flag and variables
  var flag = bru.getEnvVar('testFlag')
  if (flag == 'true') {
    tools.log('Setting Variables');
    bru.setVar('awsOrgId', bru.getEnvVar('testAwsOrgId'));
    bru.setVar('awsAccountId', bru.getEnvVar('testAwsAcctId'));
    bru.setVar('tenantId', bru.getEnvVar('tenantId'));
    tools.log('AWS Org Id: ' + bru.getEnvVar('testAwsOrgId'))
    tools.log('AWS Account Id: ' + bru.getEnvVar('testAwsAcctId'))
    tools.log('Tenant Id: ' + bru.getEnvVar('tenantId'))
  }
}

script:post-response {
  // Log on error
  const tools = require('./tools/tools');
  
  // Log on error
  if (res.status != 200) {
    if (res.body.Message) {
      tools.log('Message: ' + res.body.Message);
    }
    if (res.body.code) {
      tools.log('Code: ' + res.body.code);
    }
    if (res.body.description) {
      tools.log('Description: ' + res.body.description);
    }
  }
}
